{"version":3,"sources":["components/SearchBar.js","components/Header.js","components/Footer.js","images/logo.png","components/CardView.js","components/Firebase.js","components/Table.js","components/AboutUs.js","App.js","index.js"],"names":["SearchBar","term","setTerm","className","type","placeholder","value","onChange","e","target","Header","logo","user","login","logout","searchTerm","setlang","setSearchTerm","search","Navbar","bg","variant","expand","Container","Brand","href","alt","src","width","height","Toggle","Collapse","id","Nav","to","Link","onClick","Footer","CardView","click","setClick","data","updateRating","dataArr","useState","totalUsers","setTotalUsers","averageRating","setAverageRating","uid","rating","isNaN","user_rating","ratingStars","count","newrating","Object","keys","length","sum","parseFloat","toFixed","size","isHalf","classNames","useEffect","style","display","NaN","image","name","artist","album","release_date","edit","url","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","firebaseAuth","getAuth","auth","database","firebaseDatabase","Table","filteredData","lang","setSortBy","searchResults","dataID","i","push","pageData","setPageData","pageNum","setPageNum","setSearch","max_pages","Math","round","insertData","track","a","db","getDatabase","set","ref","album_type","language","console","log","card","map","key","Card","Img","Body","Title","searchCard","includes","handleClick","slice","color","DropdownButton","align","title","Dropdown","Item","AboutUs","rel","App","songSearchData","setSongSearchData","setData","setUser","setLanguage","sortBy","client_id","getSearchData","access_token","replace","search_url","headers","axios","get","response","limit","tracks","arr","items","artists","images","uri","error","btoa","post","querystring","stringify","then","catch","refreshAccessToken","album_name","getData","dbRef","onValue","child","snapshot","exists","songs","val","song","sort","b","localeCompare","filter","calcRating","avg","alert","songid","update","onAuthStateChanged","onLoad","signInWithPopup","result","signOut","path","exact","render","insert","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57b70992.chunk.js","sourcesContent":["import { FaSearch } from 'react-icons/fa'\r\n\r\nconst SearchBar = ({ term, setTerm }) => {\r\n    //Getting search\r\n    return (\r\n        <div className=\"search\">\r\n            <div className=\"searchInputs\">\r\n                <input className=\"searchBar\" type=\"text\" placeholder=\"Search Songs...\" value={term} onChange={(e) => { setTerm(e.target.value) }} />\r\n                <FaSearch className=\"searchIcon\" />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import SearchBar from './SearchBar'\r\nimport { Navbar, Container, Nav } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = ({ logo, user, login, logout, setlang, searchTerm, setSearchTerm, search }) => {\r\n    return (\r\n        <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\" expand=\"lg\" >\r\n            <Container className=\"container-fluid\">\r\n                <Navbar.Brand className=\"navbar-brand\" href=\"/D12A_IP_GoodListens\">\r\n                    <img alt=\"Good Listens Logo\" src={logo} width=\"100\" height=\"100\" className=\"d-inline-block align-center\" />\r\n                    GoodListens\r\n                </Navbar.Brand>\r\n\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"toggle\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\" >\r\n                    <Nav className=\"nav justify-content-end\" >\r\n                        <Link className=\"nav-link\" to=\"/D12A_IP_GoodListens\" > Home </Link>\r\n                        <Link className=\"nav-link\" to=\"/D12A_IP_GoodListens/about\" > About </Link>\r\n                        {user ?\r\n                            <Nav.Link className=\"nav-link\" onClick={logout} > Sign Out </Nav.Link> :\r\n                            <Nav.Link className=\"nav-link\" onClick={login} > Sign In </Nav.Link>\r\n                        }\r\n                        <form >\r\n                            <SearchBar SearchBar={SearchBar} term={searchTerm} setTerm={setSearchTerm} />\r\n                        </form>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","const Footer = () => {\r\n    return (\r\n        <div className=\"footer\" >\r\n            D12A IP GoodListens 2021\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export default __webpack_public_path__ + \"static/media/logo.585afbed.png\";","import { useState, useEffect } from \"react\";\r\nimport { FaRegWindowClose, FaHeadphones } from \"react-icons/fa\"\r\nimport ReactStars from \"react-rating-stars-component\"\r\n\r\nconst CardView = ({ click, setClick, data, dataArr, updateRating, user }) => {\r\n  const [totalUsers, setTotalUsers] = useState(0)\r\n  const [averageRating, setAverageRating] = useState(0)\r\n\r\n  const uid = user ? user.uid : null\r\n\r\n  const ratingChanged = (newrating) => {\r\n    updateRating(data.id, newrating)\r\n    if (data.user_rating) {\r\n      data.user_rating[uid] = newrating\r\n    } else {\r\n      data.user_rating = {\r\n        [uid]: newrating\r\n      }\r\n    }\r\n    if (!isNaN(click) && data.user_rating) {\r\n      setTotalUsers(Object.keys(data.user_rating).length)\r\n      let sum = 0\r\n      for (let rating in data.user_rating) {\r\n        sum += data.user_rating[rating]\r\n      }\r\n      setAverageRating(parseFloat((sum / totalUsers).toFixed(1)))\r\n    } else {\r\n      setTotalUsers(0)\r\n      setAverageRating(0)\r\n    }\r\n  }\r\n\r\n  // sets rating after checking if something is clicked and user_rating exists in the db and uid exist in user_rating\r\n  const rating = !isNaN(click) && data.user_rating && (uid in data.user_rating) ? data.user_rating[uid] : 0\r\n  // returns a react-rating-stars-component if something is clicked, value depending on rating making it dynamic\r\n  const ratingStars = !isNaN(click) ?\r\n    <ReactStars count={5} onChange={ratingChanged} size={20} isHalf={true} value={rating} classNames=\"react-stars\" /> : null\r\n\r\n  useEffect(() => {\r\n    if (!isNaN(click) && data.user_rating) {\r\n      setTotalUsers(Object.keys(data.user_rating).length)\r\n      let sum = 0\r\n      for (let rating in data.user_rating) {\r\n        sum += data.user_rating[rating]\r\n      }\r\n      setAverageRating(parseFloat((sum / totalUsers).toFixed(1)))\r\n    } else {\r\n      setTotalUsers(0)\r\n      setAverageRating(0)\r\n    }\r\n  }, [data, totalUsers, click])\r\n\r\n  return (\r\n    <div className=\"view child\"\r\n      style={{ display: `${isNaN(click) ? \"none\" : \"flex\"}` }}>\r\n      <FaRegWindowClose className=\"closeIcon\" onClick={() => setClick(NaN)} />\r\n      <div className=\"card-component\">\r\n        <div className=\"card-img-wrapper\">\r\n          <img alt=\"card-img\" src={isNaN(click) ? '' : data.image} className=\"card-img\" />\r\n        </div>\r\n        <div className=\"card-text\">\r\n          <div className=\"song-header\">\r\n            <h2> {isNaN(click) ? '' : data.name} </h2>\r\n            <h5> Artist - <span className=\"greyscale\">{isNaN(click) ? '' : data.artist}</span> </h5>\r\n            <h5> Album - <span className=\"greyscale\">{isNaN(click) ? '' : data.album}</span>  </h5>\r\n            <h5> Release Date - <span className=\"greyscale\">{isNaN(click) ? '' : data.release_date}</span>  </h5>\r\n          </div>\r\n          <div className=\"ratings\">\r\n            <div className=\"rating-wrapper\">\r\n              <p>Your Rating:</p>\r\n              {user ? <div>{ratingStars}</div>\r\n                : <p className=\"sign-in-warning\">Sign In to rate</p>}\r\n            </div>\r\n            <div className=\"rating-wrapper\">\r\n              <p> Overall Rating: </p>\r\n              <ReactStars count={1} size={20} edit={false} value={1} className=\"react-star\" />\r\n              <p>{averageRating} ({totalUsers})</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"play-icon-wrapper\">\r\n            <a href={isNaN(click) ? '/' : data.url} >\r\n              <FaHeadphones className=\"play-icon\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardView;\r\n","import * as firebase from 'firebase/app'\r\nimport * as firebaseAuth from \"firebase/auth\";\r\nimport * as firebaseDatabase from \"firebase/database\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAet6gHh72xSAlXNXUHejyTZzybRwe8L4M\",\r\n    authDomain: \"good-listens-2885b.firebaseapp.com\",\r\n    projectId: \"good-listens-2885b\",\r\n    storageBucket: \"good-listens-2885b.appspot.com\",\r\n    messagingSenderId: \"41185449889\",\r\n    appId: \"1:41185449889:web:ffa9d80c9b4adc8d33dde0\",\r\n    measurementId: \"G-3YP60LP1M1\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport const provider = new firebaseAuth.GoogleAuthProvider();\r\nexport const getAuth = firebaseAuth.getAuth();\r\nexport const auth = firebaseAuth\r\nexport const database = firebaseDatabase\r\nexport default firebase\r\n","import CardView from \"./CardView\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ref, set } from \"firebase/database\";\r\nimport { database } from './Firebase';\r\nimport { Card, Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa\"\r\n\r\n\r\n\r\nconst Table = ({ dataArr, searchTerm, lang, filteredData, setSortBy, setlang, searchResults, updateRating, user }) => {\r\n\r\n  var dataID = []\r\n  for (let i = 0; i < dataArr.length; i++) {\r\n    dataID.push(dataArr[i].id);\r\n  }\r\n  const [click, setClick] = useState(NaN);\r\n  const [pageData, setPageData] = useState([])\r\n  const [pageNum, setPageNum] = useState(1)\r\n  const [search, setSearch] = useState(false)\r\n  //Filtering the data to be shown according to languages\r\n\r\n  //Calculating the maximum number of pages\r\n  const max_pages = (filteredData.length % 12 === 0) ? filteredData.length / 12 : Math.round(filteredData.length / 12) + 1\r\n\r\n  const prevPage = () => {\r\n    if (pageNum > 1) {\r\n      setPageNum(pageNum - 1)\r\n    } else {\r\n      setPageNum(max_pages)\r\n    }\r\n  }\r\n\r\n  const nextPage = () => {\r\n    if (pageNum < max_pages) {\r\n      setPageNum(pageNum + 1)\r\n    } else {\r\n      setPageNum(1)\r\n    }\r\n  }\r\n\r\n  const insertData = async (track) => {\r\n    const db = database.getDatabase()\r\n    set(ref(db, \"spotify/\" + track.id), {\r\n      album: track.album,\r\n      image: track.image,\r\n      artist: track.artist,\r\n      release_date: track.release_date,\r\n      album_type: track.album_type,\r\n      name: track.name,\r\n      language: \"undefined\",\r\n      url: track.url,\r\n      user_rating: {}\r\n    });\r\n    console.log(\"Data added successfully\");\r\n  }\r\n\r\n\r\n  //if there is something in the searchbox will set the search hook to true \r\n  useEffect(() => {\r\n    if (searchTerm === \"\" && searchTerm.length === 0) {\r\n      setSearch(false);\r\n    }\r\n    else if (searchTerm.length > 0) {\r\n      setSearch(true)\r\n    }\r\n  }, [searchTerm])\r\n\r\n  const handleClick = (data, key) => {\r\n    setClick(key)\r\n    if (dataID.includes(data.id)) {\r\n      console.log(\"Data is already in Database\");\r\n      for (let i = 0; i < dataArr.length; i++) {\r\n        if (dataArr[i].id === data.id) {\r\n          data.user_rating = dataArr[i].user_rating\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      console.log(\"Data not in database\");\r\n      insertData(data)\r\n    }\r\n  }\r\n  \r\n  //card and searchCard are same but they are mapping pagedata and searchresults \r\n  const card = pageData.map((data, key) => {\r\n    return (\r\n      <div className=\"col-md-3\" key={key}>\r\n        <Card onClick={() => { setClick(key) }} >\r\n          <Card.Img variant=\"top\" src={data.image} />\r\n          <Card.Body className=\"bg-dark\">\r\n            <Card.Title className=\"center card-tile\">{data.name}</Card.Title>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const searchCard = searchResults.map((data, key) => {\r\n    return (\r\n      <div className=\"col-md-3\" key={key}>\r\n        <Card onClick={() => handleClick(data, key)} >\r\n          <Card.Img variant=\"top\" src={data.image} />\r\n          <Card.Body className=\"bg-dark\">\r\n            <Card.Title className=\"center card-title\">{data.name}</Card.Title>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  // updating the pageData as per pageNum\r\n  useEffect(() => {\r\n    setPageData(filteredData.slice((pageNum - 1) * 12, ((pageNum - 1) * 12) + 12))\r\n  }, [pageNum, filteredData])\r\n\r\n  return (\r\n    <div className=\"container-fluid bodyContainer\">\r\n      <div className=\"tableContainer\">\r\n        <div className='pageBtnContainer'>\r\n          <div className='pageBtn' onClick={prevPage} >< FaAngleLeft size={30} color={\"orange\"} className=\"pageBtnIcon\" /></div>\r\n          <DropdownButton id=\"dropdown-basic-button\" align=\"end\" title=\"Language\">\r\n            <Dropdown.Item className=\"languageDropdown\" onClick={() => setlang(\"English\")}>English</Dropdown.Item>\r\n            <Dropdown.Item className=\"languageDropdown\" onClick={() => setlang(\"Hindi\")}>Hindi</Dropdown.Item>\r\n          </DropdownButton>\r\n          <DropdownButton id=\"dropdown-basic-button\" align=\"end\" title=\"Sort By\">\r\n            <Dropdown.Item className=\"languageDropdown\" onClick={() => setSortBy(\"name\")} >Name</Dropdown.Item>\r\n            <Dropdown.Item className=\"languageDropdown\" onClick={() => setSortBy(\"artist\")} >Artist</Dropdown.Item>\r\n            {user ? <Dropdown.Item className=\"languageDropdown\" onClick={() => setSortBy(\"user\")} >Your Rating</Dropdown.Item> : null}\r\n            <Dropdown.Item className=\"languageDropdown\" onClick={() => setSortBy(\"average\")} >Top Rating</Dropdown.Item>\r\n          </DropdownButton>\r\n          <div className='pageBtn' onClick={nextPage} >< FaAngleRight size={30} color={\"orange\"} className=\"pageBtnIcon\" /></div>\r\n        </div>\r\n        <div className=\"row\" >{search ? searchCard : card}</div>\r\n      </div>\r\n      <div className=\"parent\">\r\n        <CardView click={click} setClick={setClick} data={search ? searchResults[click] : pageData[click]}\r\n          dataArr={dataArr} updateRating={updateRating} user={user} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import { FaFacebookF, FaGithub, FaTwitter } from 'react-icons/fa'\r\n\r\nconst AboutUs = () => {\r\n    return (\r\n        <section className=\"about\">\r\n            <div className=\"aboutUsContainer\">\r\n                <div className=\"innerContainer\">\r\n                    <h1>About Us</h1>\r\n                    <p className=\"text\">\r\n                        Goodlistens provides the top rated songs for you. It provides you with the details\r\n                        for Artists, Album name, rating given by other Listeners.\r\n                    </p>\r\n                    <p className=\"text\">\r\n                        If you wanna listen to your favourite song just click on the headphone button which directly\r\n                        takes you to spotify web to enjoy your music.\r\n\r\n                    </p>\r\n                    <h2>Contact Us On</h2>\r\n                    <div className=\"container-fluid\" >\r\n                        <a href=\"https://github.com/Anurag-Saraswat-01/D12A_IP_GoodListens\" target=\"_blank\" rel=\"noopener noreferrer\"\r\n                            style={{ color: \"white\" }}></a>\r\n                        <FaGithub className=\"icons\" size={30} />\r\n                        <FaFacebookF className=\"icons\" size={30} />\r\n                        <FaTwitter className=\"icons\" size={30} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AboutUs\r\n","import Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport logo from './images/logo.png';\r\nimport Table from \"./components/Table\";\r\nimport AboutUs from './components/AboutUs';\r\nimport { useState, useEffect } from 'react';\r\nimport { auth, provider, getAuth, database } from './components/Firebase';\r\nimport { ref, set } from \"firebase/database\";\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport querystring from 'query-string'\r\n\r\n\r\n// Subsequent queries will use persistence, if it was enabled successfully\r\n\r\nfunction App() {\r\n  const [songSearchData, setSongSearchData] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [user, setUser] = useState(null)\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [language, setLanguage] = useState(\"English\");\r\n  const [sortBy, setSortBy] = useState('name')\r\n  const refresh_token = \"AQARwB4kcc2WGbbRcpuusCC0dccDVFqSwWh7ea6ewTY5-lYsJAcV8gB0u29DAJDk__QSKOqRfTL2Zo5A_AJ0NaS157pFBhvuD2qcN8jXNc9088_K5W4hUXVLVtXxHTStO8Q\"\r\n\r\n  const TOKEN = \"https://accounts.spotify.com/api/token\";\r\n\r\n  const client_id = \"e92ebaa8a3d1456fb1ab78acfe75fec7\"\r\n  const client_secret = \"f2cdafb887294ee1a158d5905cc89f4d\"\r\n\r\n  //Refreshing access token\r\n  function refreshAccessToken() {\r\n    const headers = {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        'Authorization': 'Basic ' + btoa(client_id + \":\" + client_secret)\r\n      }\r\n    };\r\n\r\n    const data = {\r\n      'grant_type': 'client_credentials',\r\n      'refresh_token': refresh_token,\r\n      'client_id': client_id\r\n    };\r\n\r\n    axios.post(TOKEN, querystring.stringify(data), headers)\r\n      .then(response => {\r\n        getSearchData(response.data.access_token)\r\n      })\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  const getSearchData = async (access_token) => {\r\n    var track = searchTerm.replace(/ /g, \"%20\");\r\n    const type = \"track\" //artist, album \r\n    const market = \"US\";\r\n    const limit = \"12\";\r\n    const offset = \"0\"\r\n    const search_url = `https://api.spotify.com/v1/search?q=${track}&type=${type}&market=${market}&limit=${limit}&offset=${offset}`\r\n\r\n    const headers = {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + access_token\r\n      }\r\n    }\r\n\r\n    const response = await axios.get(search_url, headers)\r\n    if (response.data) {\r\n      let limit = response.data.tracks.limit;\r\n      let arr = []\r\n      for (let i = 0; i < limit; i++) {\r\n        try {\r\n          arr.push({\r\n            id: response.data.tracks.items[i].id,\r\n            name: response.data.tracks.items[i].name,\r\n            album_type: response.data.tracks.items[i].album.type,\r\n            album: response.data.tracks.items[i].album.name,\r\n            artist: response.data.tracks.items[i].artists[0].name,\r\n            image: response.data.tracks.items[i].album.images[1].url,\r\n            language: \"English\",\r\n            release_date: response.data.tracks.items[i].album.release_date,\r\n            url: response.data.tracks.items[i].uri,\r\n            user_rating: null\r\n          })\r\n          setSongSearchData(arr)\r\n          if (searchTerm.length === 0) {\r\n            setSongSearchData([])\r\n          }\r\n\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //Will refresh the accesstoken and search data if there is something in the searchbox\r\n  useEffect(() => {\r\n    if (searchTerm.length > 0) {\r\n      refreshAccessToken()\r\n    }\r\n  }, [searchTerm])\r\n\r\n\r\n  //Inserting data into Firebase on clicking the searchResults\r\n  const insertData = async (track) => {\r\n    const db = database.getDatabase()\r\n    set(ref(db, \"spotify/\" + track.id), {\r\n      album: track.album_name,\r\n      image: track.image,\r\n      artist: track.artist,\r\n      release_date: track.release_date,\r\n      album_type: track.album_type,\r\n      name: track.name,\r\n      language: \"English\",\r\n      url: track.url,\r\n      user_rating: {},\r\n    });\r\n    console.log(\"Data added successfully\");\r\n  }\r\n\r\n  // Login with Google Accounts\r\n  const login = () => {\r\n    auth.signInWithPopup(getAuth, provider)\r\n      .then((result) => {\r\n        if (result.user) {\r\n          const user = result.user\r\n          setUser(user)\r\n        }\r\n      })\r\n  }\r\n\r\n  // logout function \r\n  const logout = () => {\r\n    auth.signOut(getAuth)\r\n      .then(() => {\r\n        setUser(null)\r\n      })\r\n  }\r\n\r\n  // Accesssing data from database\r\n  const getData = () => {\r\n    const db = database.getDatabase()\r\n    const dbRef = database.ref(db)\r\n    database.onValue(database.child(dbRef, \"spotify/\"), (snapshot) => {\r\n      if (snapshot.exists()) {\r\n        const songs = snapshot.val()\r\n        let arr = []\r\n        for (let song in songs) {\r\n          arr.push({\r\n            id: song,\r\n            name: songs[song].name,\r\n            album_type: songs[song].album_type,\r\n            album: songs[song].album,\r\n            artist: songs[song].artist,\r\n            image: songs[song].image,\r\n            language: songs[song].language,\r\n            release_date: songs[song].release_date,\r\n            url: songs[song].url,\r\n            user_rating: ('user_rating' in songs[song] ? songs[song].user_rating : null)\r\n          })\r\n        }\r\n\r\n        switch (sortBy) {\r\n          case 'name':\r\n            setData(arr.sort((a, b) => `${a.name}`.localeCompare(`${b.name}`)))\r\n            break;\r\n\r\n          case 'artist':\r\n            setData(arr.sort((a, b) => `${a.artist}`.localeCompare(`${b.artist}`)))\r\n            break;\r\n\r\n          case 'user':\r\n            arr = arr.filter(data => data.user_rating && user.uid in data.user_rating)\r\n            setData(arr.sort((a, b) => b.user_rating[user.uid] - a.user_rating[user.uid]))\r\n            break;\r\n\r\n          case 'average':\r\n            const calcRating = (data) => {\r\n              let avg\r\n              if (data.user_rating) {\r\n                let totalUsers = Object.keys(data.user_rating).length\r\n                let sum = 0\r\n                for (let rating in data.user_rating) {\r\n                  sum += data.user_rating[rating]\r\n                }\r\n                avg = sum / totalUsers\r\n              } else {\r\n                avg = 0\r\n              }\r\n              return avg\r\n            }\r\n            setData(arr.sort((a, b) => calcRating(b) - calcRating(a)))\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      } else {\r\n        alert(\"No data\")\r\n      }\r\n    })\r\n  }\r\n\r\n  //updating user rating\r\n  const updateRating = (songid, rating) => {\r\n    const db = database.getDatabase()\r\n    const dbRef = database.ref(db)\r\n    const data = {}\r\n    data[\"spotify/\" + songid + `/user_rating/${user.uid}`] = rating\r\n    database.update(dbRef, data)\r\n    getData()\r\n  }\r\n\r\n  // so that user remains logged in after refresh\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(getAuth, (user) => {\r\n      if (user) {\r\n        setUser(user)\r\n      }\r\n    })\r\n  })\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [sortBy])\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"container-fluid\" onLoad={getData}>\r\n        <Header logo={logo} user={user} setlang={setLanguage} login={login} logout={logout} searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\r\n        <Route path=\"/D12A_IP_GoodListens\" exact render={() => (\r\n          <Table dataArr={data} setlang={setLanguage} filteredData={data.filter(data => data.language === language)} setSortBy={setSortBy}\r\n            searchResults={songSearchData} lang={language} searchTerm={searchTerm} updateRating={updateRating} user={user} insert={insertData} />\r\n        )} />\r\n        <Route path=\"/D12A_IP_GoodListens/about\" component={AboutUs} />\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}